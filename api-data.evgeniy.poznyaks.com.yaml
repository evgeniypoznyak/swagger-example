swagger: "2.0"
info:
  title: Evgeniy Poznyak Portfolio Website API
  description: API description in Markdown.
  version: 1.0.0
  contact:
    name: Evgeniy Poznyak
    url: "https://evgeniy.poznyaks.com"
    email: evgeniy.poznyak@gmail.com
host: data.evgeniy.poznyaks.com
basePath: /api/
tags:
  - name: "skills"
    description: "Everything about my skills"
    externalDocs:
      description: "Find out more"
      url: "https://evgeniy.poznyaks.com"
  - name: "projects"
    description: "Everything about my works"
    externalDocs:
      description: "Find out more"
      url: "https://evgeniy.poznyaks.com"
consumes:
  - application/json # format of the responses to the client
produces:
  - application/json
schemes:
  - https


paths:
#################
##### SKILLS ####
#################
  /skills:
    get:
      tags:
        - "skills"
      operationId: getAllSkills
      summary: Return all skills data.
      description: Optional extended description in Markdown.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SkillsWithProjects'
        404:
          description: When no skills was returned
          schema:
            $ref: '#/definitions/NotFoundError'
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'
    post:
      tags:
        - "skills"
      summary: Store skill into server
      operationId: postSkill
      parameters:
        - in: body
          name: body
          description: Store skill
          required: true
          schema:
            $ref: '#/definitions/OneSkillWithProjects'
      responses:
        200:
          description: OK
        404:
          description: No skill for provided skill id
          schema:
            $ref: '#/definitions/NotFoundError'
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'
  /skills/{id}:
    patch:
      tags:
        - "skills"
      summary: Updating existing skill
      operationId: patchSkill
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "Skill that need to be updated"
          required: true
          type: number
        - in: body
          name: skill
          description: Updated Skill object with or without attachad projects
          required: true
          schema:
            $ref: '#/definitions/OneSkillWithAttachedProjectsIds'
      responses:
        200:
          description: Success
        404:
          description: No skill for provided skill id
          schema:
            $ref: '#/definitions/NotFoundError'
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'
    delete:
      tags:
        - "skills"
      summary: Deleting existing skill
      operationId: deleteSkill
      consumes:
        - application/json
      produces:
        - application/javascript
      parameters:
        - name: id
          in: path
          description: Skill that need to be deleted
          type: number
          required: true
      responses:
        200:
          description: Success
        404:
          description: No skill for provided skill id
          schema:
            $ref: '#/definitions/NotFoundError'
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'

#################
#### PROJECTS ###
#################
  /projects:
    get:
      tags:
        - "projects"
      operationId: getProjects
      summary: Return all portfolio data.
      description: Optional extended description in Markdown.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProjectsWithSkills'
        404:
          description: When no skills was returned
          schema:
            $ref: '#/definitions/NotFoundError'
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'
    post:
      tags:
        - "projects"
      summary: Store project into server
      operationId: postProjects
      parameters:
        - in: body
          name: project
          description: Store project
          required: true
          schema:
            $ref: '#/definitions/OneProjectWithSkills'
      responses:
        200:
          description: OK
        default:
          description: Something wrong happened
          schema:
            $ref: '#/definitions/GeneralError'

##########################################################################
####################### DEFINITIONS ######################################
##########################################################################
definitions:
  # A general message schema in case of an error
  GeneralError:
    required:
      - message
    properties:
      message:
        type: string
  # A Not found error that is sent back in case no results are found for the
  # requested resource
  NotFoundError:
    required:
      - message
      - hint
    properties:
      message:
        type: string
      hint:
        type: string

  Skills:
    type: array
    items:
      $ref: '#/definitions/Skill'

  SkillsWithProjects:
    type: array
    items:
      $ref: '#/definitions/OneSkillWithProjects'

  # Skill schema
  Skill:
    required:
      - name
      - description
      - logo
      - order
    properties:
      name:
        type: string
      description:
        type: string
      logo:
        type: string
      order:
        type: number

  # SkillWithProjects schema
  OneSkillWithProjects:
    required:
      - name
      - description
      - logo
      - order
    properties:
      name:
        type: string
      description:
        type: string
      logo:
        type: string
      order:
        type: number
      projects:
        type: array
        items:
          $ref: '#/definitions/Projects'

  # SkillWithProjects schema
  OneSkillWithAttachedProjectsIds:
    required:
      - name
      - description
      - logo
      - order
    properties:
      name:
        type: string
      description:
        type: string
      logo:
        type: string
      order:
        type: number
      projects:
        type: array
        items:
          type: number

  Projects:
    type: array
    items:
      $ref: '#/definitions/Project'

  ProjectsWithSkills:
    type: array
    items:
      $ref: '#/definitions/OneProjectWithSkills'

  # Project schema
  Project:
    required:
      - name
      - description
      - proffetional
      - logo
      - order
    properties:
      name:
        type: string
      url:
        type: string
      description:
        type: string
      type:
        type: number
        enum:
          - proffetional
          - personal
      logo:
        type: string
      order:
        type: number
      images:
        type: array
        items:
          $ref: '#/definitions/Image'

  # ProjectWithSkills schema
  OneProjectWithSkills:
    required:
      - name
      - description
      - proffetional
      - logo
      - order
    properties:
      name:
        type: string
      url:
        type: string
      description:
        type: string
      type:
        type: number
        enum:
          - proffetional
          - personal
      logo:
        type: string
      order:
        type: number
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
      skills:
        type: array
        items:
          $ref: '#/definitions/Skills'

  # Images in project
  Image:
    required:
      - url
      - order
    properties:
      url:
        type: string
      order:
        type: string

##########################################################################
####################### SECURITY DEFINITIONS #############################
##########################################################################
securityDefinitions:
  KeySecurity:
    type: apiKey
    in: header
    name: api_key
